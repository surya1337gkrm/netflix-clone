{"version":3,"sources":["api/api.jsx","components/Row.jsx","api/requests.jsx","components/Banner.jsx","components/Nav.jsx","App.js","index.js"],"names":["getData","options","a","axios","res","console","log","Row","state","movies","trailerUrl","getService","method","url","props","fetchUrl","tempData","setState","data","results","handleClick","movie","movieTrailer","name","then","urlParams","URLSearchParams","URL","search","get","catch","err","this","title","isLargeRow","className","map","onClick","src","poster_path","backdrop_path","alt","key","id","videoId","opts","height","width","playerVars","autoplay","Component","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","bannerMovie","bannerService","tempBanner","Math","floor","random","length","truncateDescription","str","n","substr","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","showNav","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00ba30d9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getData = async (options) => {\r\n  try {\r\n    const res = await axios(options);\r\n    // console.log(res.data['results'])\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, {Component} from \"react\";\r\n\r\nimport {getData} from \"./../api/api\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\nclass Row extends Component {\r\n  state = {\r\n    movies: [],\r\n    trailerUrl: \"\",\r\n  };\r\n  componentDidMount() {\r\n    this.getService();\r\n  }\r\n  getService = async () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: `https://api.themoviedb.org/3${this.props.fetchUrl}`,\r\n    };\r\n    let tempData = await getData(options);\r\n    this.setState({movies: tempData.data.results});\r\n  };\r\n  handleClick = (movie) => {\r\n    console.log('hey')\r\n    if (this.state.trailerUrl) {\r\n      console.log(\"empty\");\r\n      this.setState({trailerUrl: \"\"});\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(urlParams);\r\n          this.setState({trailerUrl: urlParams.get(\"v\")});\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {title, isLargeRow} = this.props;\r\n    const {movies, trailerUrl} = this.state;\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    return (\r\n      <div className=\"row\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row-posters\">\r\n          {movies.map((movie) => {\r\n            return (\r\n              <img\r\n                onClick={() => this.handleClick(movie)}\r\n                className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\r\n                src={`${imageBaseUrl}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n                key={movie.id}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"bbe702b28dea3714bf604a719907b1a0\";\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, {Component} from \"react\";\r\nimport requests from \"./../api/requests\";\r\nimport {getData} from \"./../api/api\";\r\nimport \"./Banner.css\";\r\nclass Banner extends Component {\r\n  state = {\r\n    bannerMovie: [],\r\n  };\r\n  componentDidMount() {\r\n    this.bannerService();\r\n  }\r\n  bannerService = async () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: `https://api.themoviedb.org/3${requests.fetchNetflixOriginals}`,\r\n    };\r\n    let tempBanner = await getData(options);\r\n    this.setState({\r\n      bannerMovie:\r\n        tempBanner.data.results[\r\n          Math.floor(Math.random() * tempBanner.data.results.length - 1)\r\n        ],\r\n    });\r\n  };\r\n  truncateDescription = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  };\r\n  render() {\r\n    const {bannerMovie} = this.state;\r\n    // console.log(bannerMovie);\r\n    return (\r\n        <header\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original${bannerMovie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\",\r\n          }}\r\n        >\r\n          <div className=\"banner-content\">\r\n            <h1 className=\"banner-title\">\r\n              {bannerMovie?.title ||\r\n                bannerMovie?.name ||\r\n                bannerMovie?.original_name}\r\n            </h1>\r\n            <div className=\"banner-buttons\">\r\n              <button className=\"banner-button\">PLAY</button>\r\n              <button className=\"banner-button\">WATCHLIST</button>\r\n            </div>\r\n            <h1 className=\"banner-description\">\r\n              {this.truncateDescription(bannerMovie?.overview, 150)}\r\n            </h1>\r\n          </div>\r\n          <div className=\"banner--fadeBottom\" />\r\n        </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Banner;\r\n","import React, {Component} from \"react\";\r\nimport \"./Nav.css\";\r\nclass Nav extends Component {\r\n  state = {\r\n    showNav: false,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 50) {\r\n        this.setState({showNav: true});\r\n      } else this.setState({showNav: false});\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", () => {\r\n      this.setState({showNav: false});\r\n    });\r\n  }\r\n  render() {\r\n    const {showNav} = this.state;\r\n    return (\r\n      <div className={`nav ${showNav && \"nav-black\"}`}>\r\n        <img\r\n          className=\"nav-logo\"\r\n          src=\"https://truecostmovie.com/img/TTC/wp-content/uploads/2015/10/netflix_logo_digitalvideo-1.png\"\r\n          alt=\"Netflix Logo\"\r\n        />\r\n        <img\r\n          className=\"nav-avatar\"\r\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/1bdc9a33850498.56ba69ac2ba5b.png\"\r\n          alt=\"Netflix User\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Row from \"./components/Row\";\nimport requests from \"./api/requests\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"TOP TRENDING\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"TOP RATED\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"COMEDY MOVIES\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"ROMANTIC MOVIES\" fetchUrl={requests.fetchRomanceMovies} />\n      {/* <Row title=\"DOCUMENTARIES\" fetchUrl={requests.fetchDocumentaries} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}